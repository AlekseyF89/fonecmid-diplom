
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	Данные = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ВКМ_Договор, "ВидДоговора, ВКМ_ДатаНачала, ВКМ_ДатаОкончания");
	Если Данные.ВидДоговора <> ПредопределенноеЗначение("Перечисление.ВидыДоговоровКонтрагентов.ВКМ_Абонент") Тогда
		ОбщегоНазначения.СообщитьПользователю("Выберите абонентский договор");
		Отказ = Истина;
	КонецЕсли;
	Если Дата < Данные.ВКМ_ДатаНачала Или Дата > Данные.ВКМ_ДатаОкончания Тогда
		ОбщегоНазначения.СообщитьПользователю("Документ вне срока договора");
		Отказ = Истина;
	КонецЕсли;

КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	Если ДополнительныеСвойства.ЭтоНовый Тогда

		Сообщение = СтрШаблон("Новый заказ №%1 Исполнитель %2. Дата %3 интервал работ %4 - %5", Номер, ВКМ_Специалист,
			Формат(ВКМ_ДатаПроведенияРабот, "ДЛФ=D"), Формат(ВКМ_ВремяНачалаРабот, "ДЛФ=T"), Формат(
			ВКМ_ВремяОкончанияРабот, "ДЛФ=T"));
		ДокОбъект = Справочники.ВКМ_УведомленияТГБоту.СоздатьЭлемент();
		ДокОбъект.ВКМ_ТекстСоббщения = Сообщение;
		ДокОбъект.Записать();

	ИначеЕсли ДополнительныеСвойства.ЗаказИзменен Тогда

		Сообщение = СтрШаблон("Заказ №%1 изменен. Исполнитель %2. Дата %3 интервал работ %4 - %5", Номер,
			ВКМ_Специалист, Формат(ВКМ_ДатаПроведенияРабот, "ДЛФ=D"), Формат(ВКМ_ВремяНачалаРабот, "ДЛФ=T"), Формат(
			ВКМ_ВремяОкончанияРабот, "ДЛФ=T"));
		ДокОбъект = Справочники.ВКМ_УведомленияТГБоту.СоздатьЭлемент();
		ДокОбъект.ВКМ_ТекстСоббщения = Сообщение;
		ДокОбъект.Записать();

	КонецЕсли;
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	РеквизитыОбъекта = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Ссылка, 
		"ВКМ_ДатаПроведенияРабот, ВКМ_ВремяНачалаРабот, ВКМ_Специалист"); 
	
	Если РеквизитыОбъекта.ВКМ_ДатаПроведенияРабот <> ВКМ_ДатаПроведенияРабот
		Или РеквизитыОбъекта.ВКМ_ВремяНачалаРабот <> ВКМ_ВремяНачалаРабот
		Или РеквизитыОбъекта.ВКМ_Специалист <> ВКМ_Специалист Тогда 
		ЗаказИзменен = Истина;
	Иначе
		ЗаказИзменен = Ложь;
	КонецЕсли;

	ДополнительныеСвойства.Вставить("ЗаказИзменен", ЗаказИзменен);
	ДополнительныеСвойства.Вставить("ЭтоНовый", ЭтоНовый());
	ДополнительныеСвойства.Вставить("РежимЗаписи", РежимЗаписи);
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	// регистр ВКМ_ВыполненныеКлиентуРаботы
	Движения.ВКМ_ВыполненныеКлиентуРаботы.Записывать = Истина;
	Для Каждого ТекСтрокаВКМ_ВыполненныеРаботы из ВКМ_ВыполненныеРаботы Цикл
		Движение = Движения.ВКМ_ВыполненныеКлиентуРаботы.Добавить();
		Движение.Период = Дата;
		Движение.ВКМ_Клиент = ВКМ_Клиент;
		Движение.ВКМ_Договор = ВКМ_Договор;
		Движение.ВКМ_КоличествоЧасов = ТекСтрокаВКМ_ВыполненныеРаботы.ВКМ_ФактическиПотраченоЧасов;
		Движение.ВКМ_СуммаКОплате = ТекСтрокаВКМ_ВыполненныеРаботы.ВКМ_ЧасыКОплате;
	КонецЦикла; 
	
КонецПроцедуры
#КонецОбласти

#КонецЕсли